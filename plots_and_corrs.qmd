---
title: "ROCs and correlations"
format:
  html:
    embed-resources: true
---

```{r setup, include=FALSE}
# Set global chunk options
knitr::opts_chunk$set(
  echo = FALSE,
  message = FALSE,
  warning = FALSE
)
```

```{r}
#| include: false
source("biomarker_description_prediction.R")
source("correlations.R")
library(future.apply)
library(parallel)

dotenv::load_dot_env()
plan(multicore, workers = detectCores())

df <- read_data()

roc_df <-
  df |> select(
    Diagnosis_combined,
    age_combined,
    mean_elisa,
    mean_nfl,
    mean_ykl,
    mean_gfap,
    mean_ab40,
    mean_ab42,
    mean_tdp,
    mean_ptau181,
    mean_ptau217,
    female
  )
roc_results <- get_all_rocs(roc_df)
roc_combined <- list(
  AD = roc_results$AD_vs_Others[["roc_result"]],
  LBD = roc_results$LBD_vs_Others[["roc_result"]],
  FTD = roc_results$FTD_vs_Others[["roc_result"]]
)

outcome_label_map <- c(
  "AD" = "AD vs others (AUC: %s)",
  "FTD" = "FTD vs others (AUC: %s)",
  "LBD" = "LBD vs others (AUC: %s)"
)
```

::: {.panel-tabset}
## Subtypes vs other dementias
```{r}
# roc_results$AD_vs_Others[["roc_plot"]]
# roc_results$LBD_vs_Others[["roc_plot"]]
# roc_results$FTD_vs_Others[["roc_plot"]]
plot_roc_combined(roc_list = roc_combined,
                  title_text = "ROC curves for dementia subtypes",
                  label_map = outcome_label_map)
```

## Subtypes by sex
```{r}
#| include: false
sex_rec_results <- get_all_sex_rocs(roc_df)
sex_label_map <- c(
  "MEN"  = "Men (AUC: %s)",
  "WOMEN"  = "Women (AUC: %s)"
)
```

```{r}
#### AD ####
plot_roc_combined(roc_list =
                  list(MEN = sex_rec_results$men$AD_vs_Others$roc_result,
                       WOMEN = sex_rec_results$women$AD_vs_Others$roc_result),
                  title_text = "AD vs other dementias",
                  label_map = sex_label_map)

#### LBD ####
plot_roc_combined(roc_list =
                  list(MEN = sex_rec_results$men$LBD_vs_Others$roc_result,
                       WOMEN = sex_rec_results$women$LBD_vs_Others$roc_result),
                  title_text = "LBD vs other dementias",
                  label_map = sex_label_map)

#### FTD ####
plot_roc_combined(roc_list =
                  list(MEN = sex_rec_results$men$FTD_vs_Others$roc_result,
                       WOMEN = sex_rec_results$women$FTD_vs_Others$roc_result),
                  title_text = "FTD vs other dementias",
                  label_map = sex_label_map)

gender_diag_table <- roc_df |>
  mutate(Gender = ifelse(female == 1, "Women", "Men")) |>
  group_by(Gender, Diagnosis_combined) |>
  summarise(Count = n(), .groups = "drop") |>
  pivot_wider(names_from = Gender, values_from = Count, values_fill = 0) |>
  mutate(Total = Men + Women,
         Men = sprintf("%d (%.1f%%)", Men, Men / Total * 100),
         Women = sprintf("%d (%.1f%%)", Women, Women / Total * 100)) |>
  select(Diagnosis_combined, Men, Women, Total)

# If you want a prettier table for publication/reports
if (require(knitr)) {
  kable(gender_diag_table,
        caption = "Distribution of men and women across diagnostic groups",
        col.names = c("Diagnosis", "Men N (%)", "Women N (%)", "Total"))
}
```

## Subtypes vs control
```{r}
# roc_results$AD_vs_Control[["roc_plot"]]
# roc_results$FTD_vs_Control[["roc_plot"]]
# roc_results$LBD_vs_Control[["roc_plot"]]
roc_combined <- list(
  AD = roc_results$AD_vs_Control[["roc_result"]],
  LBD = roc_results$LBD_vs_Control[["roc_result"]],
  FTD = roc_results$FTD_vs_Control[["roc_result"]]
)
outcome_label_map <- c(
  "AD" = "AD vs control (AUC: %s)",
  "FTD" = "FTD vs control (AUC: %s)",
  "LBD" = "LBD vs control (AUC: %s)"
)
plot_roc_combined(roc_list = roc_combined,
                  title_text = "ROC curves for dementia subtypes",
                  label_map = outcome_label_map)
```

## LBD vs FTD

```{r}
roc_results$LBD_vs_FTD[["roc_plot"]]
```

```{r}
#| include: false
print_pet_table <- function(pet_output, caption) {
  df <- as.data.frame(t(pet_output$coefs))
  rownames(df) <- NULL
  df <- df |>
    rename(
      "Z-score" = "zscore.mean_ptau217",
      "Raw SUVR" = "raw_suvr.mean_ptau217",
      "Centiloid" = "centiloid.mean_ptau217"
      )

  knitr::kable(df, digits = 3, caption = paste0(caption, " (n = ", pet_output$n, ")"))
}
```

## MMSE
```{r}
whole_inflam <- inflam_cdr(df)
Any_inflam <- inflam_cdr(df, diagnosis = c("Alzheimer's", "Frontotermporal", "Lewy bodies"))
AD_inflam <- inflam_cdr(df, diagnosis = c("Alzheimer's"))
FTD_inflam <- inflam_cdr(df, diagnosis = c("Frontotermporal"))
LBD_inflam <- inflam_cdr(df, diagnosis = c("Lewy bodies"))

mmse_list <- list(
  "All" = as.data.frame(whole_inflam$mmse),
  "Any Dem" = as.data.frame(Any_inflam$mmse),
  "AD" = as.data.frame(AD_inflam$mmse),
  "LBD" = as.data.frame(LBD_inflam$mmse),
  "FTD" = as.data.frame(FTD_inflam$mmse)
)

mmse <- bind_cols(mmse_list) |>
  setNames(names(mmse_list)) |>
  rownames_to_column("Marker") |>
  relocate(Marker) |>
  mutate(Marker = case_when(
                            Marker == "mean_elisa" ~ "CD14",
                            Marker == "mean_nfl" ~ "NfL",
                            Marker == "mean_ykl" ~ "YKL-40",
                            Marker == "mean_gfap" ~ "GFAP",
                            Marker == "mean_ab42_ab40_ratio" ~ "AB42/AB40 Ratio",
                            Marker == "mean_ab40" ~ "AB40",
                            Marker == "mean_ab42" ~ "AB42",
                            Marker == "mean_tdp" ~ "TDP-43",
                            Marker == "mean_ptau181" ~ "pTau-181",
                            Marker == "mean_ptau217" ~ "pTau-217",
                            TRUE ~ Marker
                            ))
knitr::kable(mmse, digits = 3, caption = "Inflamatory Markers and MMSE (age/sex adjusted)")

markers <- c("CD14",
             "NfL",
             "YKL-40",
             "GFAP",
             "AB42/AB40 Ratio",
             "AB40",
             "AB42",
             "TDP-43",
             "pTau-181",
             "pTau-217")

for (marker in markers) {
  show(df |>
    rename(
           "CD14" = "mean_elisa",
           "NfL" = "mean_nfl",
           "YKL-40" = "mean_ykl",
           "GFAP" = "mean_gfap",
           "AB42/AB40 Ratio" = "mean_ab42_ab40_ratio",
           "AB40" = "mean_ab40",
           "AB42" = "mean_ab42",
           "TDP-43" = "mean_tdp",
           "pTau-181" = "mean_ptau181",
           "pTau-217" = "mean_ptau217"
           ) |>
    filter(!is.na(get(marker)) & !is.na(MMSE)) |>
    filter(Site == "Washington") |>
    ggplot(aes(x = get(marker), y = MMSE, color = Diagnosis_combined)) +
    geom_point() +
    geom_smooth(method = "lm", se = FALSE) +
    labs(color = "Diagnosis") +
    xlab(marker) +
    ggtitle(paste0(marker, " vs MMSE (not adjusted)")))
}

```

## CDR
```{r}
cdr_list <- list(
  "All" = as.data.frame(whole_inflam$cdr),
  "Any Dem" = as.data.frame(Any_inflam$cdr),
  "AD" = as.data.frame(AD_inflam$cdr),
  "LBD" = as.data.frame(LBD_inflam$cdr),
  "FTD" = as.data.frame(FTD_inflam$cdr)
)

cdr <- bind_cols(cdr_list) |>
  setNames(names(cdr_list)) |>
  rownames_to_column("Marker") |>
  relocate(Marker) |>
  mutate(Marker = case_when(
                            Marker == "mean_elisa" ~ "CD14",
                            Marker == "mean_nfl" ~ "NfL",
                            Marker == "mean_ykl" ~ "YKL-40",
                            Marker == "mean_gfap" ~ "GFAP",
                            Marker == "mean_ab42_ab40_ratio" ~ "AB42/AB40 Ratio",
                            Marker == "mean_ab40" ~ "AB40",
                            Marker == "mean_ab42" ~ "AB42",
                            Marker == "mean_tdp" ~ "TDP-43",
                            Marker == "mean_ptau181" ~ "pTau-181",
                            Marker == "mean_ptau217" ~ "pTau-217",
                            TRUE ~ Marker
                            ))
knitr::kable(cdr, digits = 3, caption = "Inflamatory Markers and CDR (age/sex adjusted)")

for (marker in markers) {
  show(df |>
    rename(
           "CD14" = "mean_elisa",
           "NfL" = "mean_nfl",
           "YKL-40" = "mean_ykl",
           "GFAP" = "mean_gfap",
           "AB42/AB40 Ratio" = "mean_ab42_ab40_ratio",
           "AB40" = "mean_ab40",
           "AB42" = "mean_ab42",
           "TDP-43" = "mean_tdp",
           "pTau-181" = "mean_ptau181",
           "pTau-217" = "mean_ptau217"
           ) |>
    filter(!is.na(get(marker)) & !is.na(cdr)) |>
    filter(Site == "Washington") |>
    ggplot(aes(x = get(marker), y = cdr, color = Diagnosis_combined)) +
    geom_point() +
    geom_smooth(method = "lm", se = FALSE) +
    labs(color = "Diagnosis") +
    xlab(marker) +
    ggtitle(paste0(marker, " vs CDR (not adjusted)")))
}

# for (marker in markers) {
#   show(df |>
#     rename(
#            "CD14" = "mean_elisa",
#            "NfL" = "mean_nfl",
#            "YKL-40" = "mean_ykl",
#            "GFAP" = "mean_gfap",
#            "AB42/AB40 Ratio" = "mean_ab42_ab40_ratio",
#            "AB40" = "mean_ab40",
#            "AB42" = "mean_ab42",
#            "TDP-43" = "mean_tdp",
#            "pTau-181" = "mean_ptau181",
#            "pTau-217" = "mean_ptau217"
#            ) |>
#     mutate(value = standardise(!!sym(marker)),
#            cdr = standardise(cdr)) |>
#     filter(!is.na(!!sym(marker)) & !is.na(cdr)) |>
#     filter(Site == "Washington") |>
#     ggplot(aes(x = value, y = cdr, color = Diagnosis_combined)) +
#     geom_point() +
#     geom_smooth(method = "lm", se = FALSE) +
#     labs(color = "Diagnosis") +
#     xlab(marker) +
#     ggtitle(paste0(marker, " vs CDR (not adjusted)")))
# }
```

## CSF
```{r}
cohort_info <- list(
  "All" = NULL,
  "Any Dem" = c("Alzheimer's", "Frontotermporal", "Lewy bodies"),
  "Alzheimer's" = c("Alzheimer's"),
  "Frontotermporal" = c("Frontotermporal"),
  "Lewy bodies" = c("Lewy bodies")
)

# Loop over each cohort, run csf_corr(), extract the AB ratio + n,
# and record the cohort name.
results <- lapply(names(cohort_info), function(cohort) {
  diagnosis <- cohort_info[[cohort]]
  csf_out <- csf_corr(df, diagnosis = diagnosis)
  tmp_df <- as.data.frame(t(csf_out$coefs))
  ab_ratio <- round(tmp_df$CSF_AB_Ratio.mean_ptau217, 3)
  list(Cohort = cohort, "AB42/AB40 Ratio" = ab_ratio, n = csf_out$n)
})
final_df <- do.call(rbind, results)
knitr::kable(final_df, caption = "pTau-217 and CSF AB-Ratio (age/sex adjusted)")

df |>
  mutate(CSF_AB_Ratio = LUMIPULSE_CSF_AB42 / LUMIPULSE_CSF_AB40) |>
  filter(!is.na(mean_ptau217) & !is.na(CSF_AB_Ratio)) |>
  filter(Site == "Washington") |>
  ggplot(aes(x = mean_ptau217, y = CSF_AB_Ratio, color = Diagnosis_combined)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    color = "Diagnosis",
    title = "CSF AB-Ratio vs pTau-217 (not age/sex adjusted)",
    x = "Mean pTau-217",
    y = "CSF AB-Ratio"
  )
```

## PET / PTAU217
```{r}
whole_pet <- pet_corr(df)
Any_pet <- pet_corr(df, diagnosis = c("Alzheimer's", "Frontotermporal", "Lewy bodies"))
AD_pet <- pet_corr(df, diagnosis = c("Alzheimer's"))
FTD_pet <- pet_corr(df, diagnosis = c("Frontotermporal"))
LBD_pet <- pet_corr(df, diagnosis = c("Lewy bodies"))

pet <- bind_cols(
          as.data.frame(whole_pet$coefs),
          as.data.frame(Any_pet$coefs),
          as.data.frame(AD_pet$coefs),
          as.data.frame(FTD_pet$coefs),
          as.data.frame(LBD_pet$coefs)
          ) |>
  setNames(c(
             paste0("All (n = ", whole_pet$n, ")"),
             paste0("Any Dem (n = ", Any_pet$n, ")"),
             paste0("AD (n = ", AD_pet$n, ")"),
             paste0("LBD (n = ", FTD_pet$n, ")"),
             paste0("FTD (n = ", LBD_pet$n, ")")
          )) |>
  rownames_to_column("Measure") |>
  mutate(Measure = case_when(
                            Measure == "zscore" ~ "Z-score",
                            Measure == "raw_suvr" ~ "Raw SUVR",
                            Measure == "centiloid" ~ "Centiloid",
                            TRUE ~ Measure
                            )) |>
  relocate(Measure)

knitr::kable(pet, digits = 3, caption = "PET Measures and pTau-217 (age/sex adjusted)")

df |>
  rename(
    "raw_suvr" = "av45/PIB_fsuvr_rsf_tot_cortmean",
    "centiloid" = "Centiloid_AV45_fSUVR_TOT_CORTMEA",
  ) |>
  filter(!is.na(mean_ptau217) & !is.na(raw_suvr)) |>
  filter(Site == "Washington") |>
  ggplot(aes(x = mean_ptau217, y = raw_suvr, color = Diagnosis_combined)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    color = "Diagnosis",
    title = "Raw SUVR AB-Ratio vs pTau-217 (not age/sex adjusted)",
    x = "Mean pTau-217",
    y = "SUVR"
  )

df |>
  rename(
    "raw_suvr" = "av45/PIB_fsuvr_rsf_tot_cortmean",
    "centiloid" = "Centiloid_AV45_fSUVR_TOT_CORTMEA",
  ) |>
  filter(!is.na(mean_ptau217) & !is.na(centiloid)) |>
  filter(Site == "Washington") |>
  ggplot(aes(x = mean_ptau217, y = centiloid, color = Diagnosis_combined)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    color = "Diagnosis",
    title = "Centiloid AB-Ratio vs pTau-217 (not age/sex adjusted)",
    x = "Mean pTau-217",
    y = "Centiloid"
  )
```

## VImp Men
#### * indicates p < 0.05

```{r}
#| results: asis
dem_names <- c(
               "Alzheimer's",
               "Frontotermporal",
               "Lewy bodies"
)

vimp_data_men <- read_data() |>
  filter(female != 1 & Diagnosis_combined != "Control") |>
  select(
         Diagnosis_combined,
         age_combined,
         mean_elisa,
         mean_nfl,
         mean_ykl,
         mean_gfap,
         mean_ab40,
         mean_ab42,
         mean_tdp,
         mean_ptau181,
         mean_ptau217
         ) |>
  drop_na()

vimp_men <- lapply(dem_names,
                   function(outcome) {
                     vimp_function_par(data = vimp_data_men,
                                       outcome_subtype = outcome,
                                       stratification = "men")$mat |>
                     select(c(s, est, test))

                   }) |>
  setNames(dem_names)

preds <- vimp_data_men |>
  select(-Diagnosis_combined) |>
  names()

for (dem_name in dem_names) {
  show(kable(
        cbind(preds[as.numeric(vimp_men[[dem_name]]$s)],
              vimp_men[[dem_name]]$est,
              vimp_men[[dem_name]]$test) |>
        as_tibble() |>
        setNames(c(
                   "var_name",
                   "imp",
                   "test"
                   )) |>
        mutate(imp = round(as.numeric(imp), 3)) |>
        mutate(
          imp = paste0(imp, ifelse(test, "*", ""))
        ) |>
        select(-test) |>
        mutate(var_name = case_when(
                              var_name == "mean_elisa" ~ "CD14",
                              var_name == "mean_nfl" ~ "NfL",
                              var_name == "mean_ykl" ~ "YKL-40",
                              var_name == "mean_gfap" ~ "GFAP",
                              var_name == "mean_ab42_ab40_ratio" ~ "AB42/AB40 Ratio",
                              var_name == "mean_ab40" ~ "AB40",
                              var_name == "mean_ab42" ~ "AB42",
                              var_name == "mean_tdp" ~ "TDP-43",
                              var_name == "mean_ptau181" ~ "pTau-181",
                              var_name == "mean_ptau217" ~ "pTau-217",
                              TRUE ~ var_name
                              )),
        col.names = c("Predictor", "Importance"),
        caption = paste0("VImp for ",
                         dem_name,
                         " vs Other Dem in Men",
                         " (n = ",
                         nrow(filter(vimp_data_men, Diagnosis_combined == dem_name)),
                         ")")
  ))
}
```

## VImp Women
#### * indicates p < 0.05
```{r}
#| results: asis
vimp_data_women <- read_data() |>
  filter(female == 1 & Diagnosis_combined != "Control") |>
  select(
         Diagnosis_combined,
         age_combined,
         mean_elisa,
         mean_nfl,
         mean_ykl,
         mean_gfap,
         mean_ab40,
         mean_ab42,
         mean_tdp,
         mean_ptau181,
         mean_ptau217
         ) |>
  drop_na()

vimp_women <- lapply(dem_names,
                  function(outcome) {
                    vimp_function_par(data = vimp_data_women,
                                      outcome_subtype = outcome,
                                      stratification = "women")$mat |>
                    select(c(s, est, test))
                  }) |>
    setNames(dem_names)

for (dem_name in dem_names) {
  show(kable(
        cbind(preds[as.numeric(vimp_women[[dem_name]]$s)],
              vimp_women[[dem_name]]$est,
              vimp_women[[dem_name]]$test) |>
        as_tibble() |>
        setNames(c(
                   "var_name",
                   "imp",
                   "test"
                   )) |>
        mutate(imp = round(as.numeric(imp), 3)) |>
        mutate(
          imp = paste0(imp, ifelse(test, "*", ""))
        ) |>
        select(-test) |>
        mutate(var_name = case_when(
                              var_name == "mean_elisa" ~ "CD14",
                              var_name == "mean_nfl" ~ "NfL",
                              var_name == "mean_ykl" ~ "YKL-40",
                              var_name == "mean_gfap" ~ "GFAP",
                              var_name == "mean_ab42_ab40_ratio" ~ "AB42/AB40 Ratio",
                              var_name == "mean_ab40" ~ "AB40",
                              var_name == "mean_ab42" ~ "AB42",
                              var_name == "mean_tdp" ~ "TDP-43",
                              var_name == "mean_ptau181" ~ "pTau-181",
                              var_name == "mean_ptau217" ~ "pTau-217",
                              TRUE ~ var_name
                              )),
        col.names = c("Predictor", "Importance"),
        caption = paste0("VImp for ",
                         dem_name,
                         " vs Other Dem in Women",
                         " (n = ",
                         nrow(filter(vimp_data_women, Diagnosis_combined == dem_name)),
                         ")")
  ))
}
```
:::
